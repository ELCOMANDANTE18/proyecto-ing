#!/usr/bin/env groovy

node {
    stage('checkout') {
        checkout scm
    }

    // AÑADIMOS ESTE BLOQUE 'dir'
    // Esto le dice a Jenkins que ejecute todo lo que está adentro
    // "desde" la subcarpeta 'proyecto-jhispter'
    dir('proyecto-jhispter') {

        stage('check java') {
            sh "java -version"
        }

        stage('clean') {
            sh "chmod +x mvnw" // <-- Ahora sí encontrará 'mvnw'
            sh "./mvnw -ntp clean -P-webapp"
        }
       
       
        stage('install tools') {
            sh "./mvnw -ntp com.github.eirslett:frontend-maven-plugin:install-node-and-npm@install-node-and-npm"
        }

        stage('npm install') {
            sh "./mvnw -ntp com.github.eirslett:frontend-maven-plugin:npm"
        }
        stage('backend tests') {
            try {
                sh "./mvnw -ntp verify -P-webapp"
            } catch(err) {
                throw err
            } finally {
                junit '**/target/surefire-reports/TEST-*.xml,**/target/failsafe-reports/TEST-*.xml'
            }
        }

        stage('frontend tests') {
            try {
                sh "./mvnw -ntp com.github.eirslett:frontend-maven-plugin:npm -Dfrontend.npm.arguments='run test'"
            } catch(err) {
                throw err
            } finally {
                junit '**/target/test-results/TESTS-results-jest.xml'
            }
        }

        stage('packaging') {
            sh "./mvnw -ntp verify -P-webapp -Pprod -DskipTests"
            archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
        }
        
        // Esta es la etapa que agregamos del PDF
        stage('publish docker') {
          withCredentials([usernamePassword(credentialsId: 'dockerhub-login', passwordVariable: 'DOCKER_REGISTRY_PWD', usernameVariable: 'DOCKER_REGISTRY_USER')]) {
            sh "./mvnw -ntp jib:build"
          }
        }

    } // <-- FIN DEL BLOQUE 'dir'
}